<html>
<head>
<script type="text/javascript" charset="utf-8" src="../../../api/rhoapi-modules.js"></script>
<script>
//  Bluetooth Address QLn320: AC:3F:A4:09:07:C5
//  Bluetooth Address MZ220:  00:03:7A:33:53:93 (Does NOT support ZPL!)
//  IP Address QLn320: 192.168.0.23:6101

function makeFilePath(filename) {
	return (Rho.Application.appsBundleFolder + "public/tests/re4/printing/" + filename);
}
	
function setMessage(theMessage)
{
	document.getElementById('message').innerHTML = theMessage;
}

function printerSelected()
{

}

function GetSelectedPrinter()
{
	//var selectedPrinterID = document.getElementById('printerSelect').value;
	var selectedPrinterID = document.getElementById('printerToUse').value;
	var myPrinter = Rho.PrinterZebra.getPrinterByID(selectedPrinterID);
	return myPrinter;
}

function printString()
{
	var myPrinter = GetSelectedPrinter();
	var textToPrint = document.getElementById('txtPrintString').value;
	setMessage("Printing Raw Text: " + textToPrint);
	myPrinter.printRawString(textToPrint);
}

function retrieveFileNamesFromPrinter()
{
	var myPrinter = GetSelectedPrinter();
	setMessage("Retrieving File Names from the Printer");
	myPrinter.retrieveFileNames(function (cb){
		if (cb.status == Rho.PrinterZebra.PRINTER_STATUS_SUCCESS)
		{
			setMessage("Successfully read file names from printer.  There are " + cb.fileNames.length + " files on the printer");
		}
		else
		{
			setMessage("Filenames were not successfully read from the printer: " + cb.status);
		}
	});
}

function printImage()
{
	var myPrinter = GetSelectedPrinter();
	var imageToPrint = makeFilePath("re_logo.png");
	setMessage("Printing Image: " + imageToPrint);
	myPrinter.printImageFromFile(imageToPrint, 100, 100, {"width": 100, "height": 100, "isInsideFormat":false}, function(cb) {
		setMessage("Callback Return: " + cb);
	});
}
	
function connectPrinter()
{
	var selectedPrinterID = document.getElementById('printerToUse').value;
	setMessage("Connecting to Printer: " + selectedPrinterID);
	var myPrinter = Rho.PrinterZebra.getPrinterByID(selectedPrinterID);

	// Let's try connecting
	myPrinter.connect(function (cb){
		if (cb == 'PRINTER_STATUS_SUCCESS')
			setMessage("Printer has successfully connected<br>Device Name: " + myPrinter.deviceName + "<br>Device Port: " + myPrinter.devicePort + "<br>Connection Type: " + myPrinter.connectionType + "<br>Device Address: " + myPrinter.deviceAddress + "<br>Printer Type: " + myPrinter.printerType);
		else
			setMessage("Printer did not successfully connect - " + cb);
	});	
}

function disconnectPrinter()
{
	var selectedPrinterID = document.getElementById('printerToUse').value;
	setMessage("Disconnecting from printer: " + selectedPrinterID);
	var myPrinter = Rho.PrinterZebra.getPrinterByID(selectedPrinterID);

	// Let's try disconnecting
	myPrinter.disconnect(function (cb){
		if (cb == 'PRINTER_STATUS_SUCCESS')
			setMessage("Printer has successfully disconnected");
		else
			setMessage("Printer did not successfully disconnect");
	});	
}

function discoverPrinters()
{
var printers = [];
setMessage("searching for printers");
var comboBox = document.getElementById('printerSelect');
comboBox.length = 0;
Rho.PrinterZebra.searchPrinters({ 

//    connectionType:Rho.PrinterZebra.CONNECTION_TYPE_BLUETOOTH,  
//    connectionType:Rho.PrinterZebra.CONNECTION_TYPE_TCP,  
//    printerType: Rho.PrinterZebra.PRINTER_TYPE_ZEBRA,
//	connectionType: Rho.PrinterZebra.CONNECTION_TYPE_BLUETOOTH,
//	deviceAddress: "AC:3F:A4:09:07:C5"
//	deviceAddress: "192.168.0.23"
	deviceAddress: document.getElementById('printerToUse').value
    }, function (cb){
		setMessage("Search Printers Callback Status: " + cb.status);
        if(cb.status == 'PRINTER_STATUS_SUCCESS')
        {
            if (typeof cb.printerID != "undefined")
            {
                setMessage("Found a Printer: " + cb.printerID);
				var newPrinterCombo = document.createElement("option");
				newPrinterCombo.value = cb.printerID;
				newPrinterCombo.innerHTML = "Printer: " + cb.printerID;
				comboBox.appendChild(newPrinterCombo);
                printers.push(cb.printerID);
            }
            else
            {
                setMessage("Search Printers has finished searching");
            }
        }
        else
        {
            setMessage("Search Printers did not return success, actual return value: " + cb.status);
        }
    }
);
}

function radioButtonsChanged()
{
	if(document.getElementById('zplRad1').checked)
	{
		document.getElementById('txtPrintString').value = "Hello World from Printer";
	}
	else if(document.getElementById('zplRad2').checked)
	{
		document.getElementById('txtPrintString').value = "^XA^DFE:FORMAT.ZPL^FS^FO50,50^A0,60,60^FDTest DCC^FS^LH30,30^FO20,10^AF^FN1^FS^FO20,60^B3,,40,,^FN2^FS^FO20,120^AF^FN3^FS^XZ";		
	}
	else if(document.getElementById('zplRad3').checked)
	{
		document.getElementById('txtPrintString').value = "^XA^DFE:FORMAT.ZPL^FS^FO20,30^GB750,1100,4^FS^FO20,30^GB750,200,4^FS^FO20,30^GB750,400,4^FS^FO20,30^GB750,700,4^FS^FO20,226^GB325,204,4^FS^FO30,40^ADN,36,20^FDShip to:^FS^FO30,260^ADN,18,10^FDPart Number:^FS^FO30,750^ADN,18,10^FDDescription:^FS^FO30,275^ADN,36,20^FN1^FS^FO30,330^ADN,36,20^FN2^FS^FO30,65^ADN,36,20^FN3^FS^XZ";		
	}
	else if(document.getElementById('zplRad4').checked)
	{
		document.getElementById('txtPrintString').value = "^XA^FO10,10^A0,40,40^FDHello World!^FS^XZ";
	}
}

function printStoredFormat()
{
	var arrayzpl = [document.getElementById('storedFormatVariable1').value, document.getElementById('storedFormatVariable2').value, document.getElementById('storedFormatVariable3').value];
	var myPrinter = GetSelectedPrinter();	
	myPrinter.printStoredFormatWithArray('E:FORMAT.ZPL', arrayzpl, function(cb) {
		setMessage("Callback Return: " + cb);
	});
}



function test()
{
	//  Next: 
	//  * Print Raw ZPL string (get it working with my second example)
	//  * Can I print Images on the QLn320? (storeImage & use IL to print that image)
	//  *  -  Separate from that, also printImageFromFile
	//  * Print from a file containing ZPL Instructions (sendFileContents)
	//  * Printing on Android
	//  * Does retrieveFileNames work on Android?
	//  * The requestState method (will work with TCP printers)
	//  * Enumerate supported control languages
	//  * 


	var myPrinter = GetSelectedPrinter();
//	var zplstoredformat = '^XA^DFE:FORMAT.ZPL^FS^LH30,30^FO20,10^AF^FN1^FS^FO20,60^B3,,40,,^FN2^FS^FO20,120^AF^FN3^FS^FO20,180^AF^FN4^FS^FO20,240^AF^FN5^FS^FO20,300^AF^FN6^FS^XZ';
/*        var ccplstoredformat = "! DF E:FORMATAS.FMT\n" +
            "! 0 200 200 310 1\n" +
            "CENTER\n" +
            "TEXT 4 1 0 50 RECEIPT\n" +
            "TEXT 4 0 0 150 \\\\\n" +
            "TEXT 4 0 0 200 \\\\\n" +
            "TEXT 4 0 0 250 \\\\\n" +
            "FORM\n" +
            "PRINT\n";
*/	
//	myPrinter.printRawString("^XA^DFE:FORMAT.ZPL^FS^LH30,30^FO20,10^AF^FN1^FS^FO20,60^B3,,40,,^FN2^FS^FO20,120^AF^FN3^FS^FO20,180^AF^FN4^FS^FO20,240^AF^FN5^FS^FO20,300^AF^FN6^FS^XZ", {}, function(cb) {
//		setMessage("Test Callback Return: " + cb);
//	});

//	myPrinter.sendFileContents(makeFilePath("test_zpl.zpl"), function(cb) {
//		setMessage("Send File Contents Callback: " + cb);
//	});

//	var zplstoredformat = '^XA^LH30,30^FO20,10^ADN,90,50^AD^FDWikipedia^FS^XZ';
	var arrayzpl = ['dval2', 'val1', 'val3', 'val4', 'val5', 'val6'];
//	myPrinter.printRawString(zplstoredformat, {}, function(cb) {
//		alert(cb);
//	});
	myPrinter.printStoredFormatWithArray('E:FORMAT.ZPL', arrayzpl, function(cb) {
		alert(cb);
	});

//	myPrinter.enumerateSupportedControlLanguages(function(cb) {
//		alert(cb);
//	});

/*

^XA
^DFR:Filename.ZPL^FS 
^FO25,25^A0N,50,50^FDZebra Printer^FS
^FO25,75^A0N,50,50^FDSerial Number^FS
^FO25,150^A0N,50,50^FN1^FS
^XZ


^XA
^DFR:Format1.ZPL^FS
^FO50,50^A0,60,60^FDTest^FS
^XZ         

^XA^DFE:FORMAT.ZPL^FS^FO50,50^A0,60,60^FDTest DCC^FS^LH30,30^FO20,10^AF^FN1^FS^FO20,60^B3,,40,,^FN2^FS^FO20,120^AF^FN3^FS^FO20,180^AF^FN4^FS^FO20,240^AF^FN5^FS^FO20,300^AF^FN6^FS^XZ


^XA
^DFE:FORMAT.ZPL^FS 
^FO25,25^A0N,50,50^FDDCC Zebra Printer^FS
^FO25,75^A0N,50,50^FDSerial Number^FS
^FO25,150^A0N,50,50^FN1^FS
^XZ 

*/
	
}

</script>
</head>
<body>
<H1><CENTER>Printing (Zebra)</CENTER></H1>
<P>
<div style="font-family:'verdana'; font-size:8pt">
<b><a href="javascript:application.quit()">Quit</a></b> | <a href="javascript:location.reload(true);">Refresh (force get)</a> | <a href="javascript:window.history.back();">Go Back</a>
</div>
<P>

Printer in use: <select id="printerToUse">
  <option value="AC:3F:A4:09:07:C5">AC:3F:A4:09:07:C5 - QLn320</option>
  <option value="00:03:7A:33:53:93">00:03:7A:33:53:93 - MZ 220</option>
  <option value="192.168.0.23">192.168.0.23:6101 - QLn320</option>
</select>
<br>
Available Printers: <select id="printerSelect" onchange='printerSelected()'>
  <option value="123">First search for printers</option>
</select>
<br>
<input type="Button" value="Search for Printers" onclick="javascript:discoverPrinters()"/>
<input type="Button" value="Connect" onclick="javascript:connectPrinter()"/> 
<input type="Button" value="Disconnect" onclick="javascript:disconnectPrinter()"/> <br><br>
<input type="Button" value="Send Raw String" onclick="javascript:printString()"/> <textarea rows="3" id="txtPrintString">Hello World from Printer</textarea><br>
<input type="radio" id="zplRad1" name="zplRadio" value="zpl1" onclick="radioButtonsChanged()" checked>Line Printer
<input type="radio" id="zplRad2" name="zplRadio" value="zpl2" onclick="radioButtonsChanged()">Store Format.zpl 1
<input type="radio" id="zplRad3" name="zplRadio" value="zpl3" onclick="radioButtonsChanged()">Store Format.zpl 2
<input type="radio" id="zplRad4" name="zplRadio" value="zpl4" onclick="radioButtonsChanged()">Hello World ZPL<br>
Variables: <input type="text" id="storedFormatVariable1" value='Val1' size="5"><input type="text" id="storedFormatVariable2" value='Val2' size="5"><input type="text" id="storedFormatVariable3" value='Val3' size="5"><br>
<input type="Button" value="Print Stored Format with Variables" onclick="javascript:printStoredFormat()"/> <br>
<br>

<input type="Button" value="Retrieve File Names from Printer" onclick="javascript:retrieveFileNamesFromPrinter()"/> <br>
<input type="Button" value="Print Image" onclick="javascript:printImage()"/><br>




<P>
<input type="Button" value="Test Button" onclick="javascript:test()"/>
<P>
<H3>Printer Status</H3>
<div id="message">Messages go here</div>
<P>







<div style="font-family:'verdana'; font-size:8pt">
<b><a href="javascript:application.quit()">Quit</a></b> | <a href="javascript:location.reload(true);">Refresh (force get)</a> | <a href="javascript:window.history.back();">Go Back</a>
</div>

</body>
</html>